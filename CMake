
ADD_SUBDIRECTORY:命令的作用是为构建添加一个子路径。source_dir选项指定了CMakeLists.txt源文件和代码文件的位置，相当于索引到子CmakeLists.txt

INCLUDE_DIRECTORIES: Add the given directories to those the compiler uses to search for include files. These directories are added to 
                      the directory property INCLUDE_DIRECTORIES for the current CMakeLists file. They are also added to the target 
                      property INCLUDE_DIRECTORIES for each target in the current CMakeLists file. The target property values are 
                      the ones used by the generators
                   

source_group: source_group("Source Files\\Graph\\Triplet" FILES "Graph3.h" "Graph3.cpp") 在source Files文件目录下的Graph的目录下Triplet 下方Graphic3.h Graph3.cpp
              source_group("Source Files\\Inference" FILES "Infer.h" "Infer.cpp")  
            
            
add_custom_command: 有两种使用形式。
  第一种形式是增加一个客制命令用来产生一个输出:
    add_custom_command(OUTPUT output1 [output2 ...]
                     COMMAND command1[ARGS] [args1...]
                     [COMMAND command2 [ARGS] [args2...] ...]
                     [MAIN_DEPENDENCYdepend]
                     [DEPENDS[depends...]]
                     [IMPLICIT_DEPENDS<lang1> depend1 ...]
                     [WORKING_DIRECTORYdir]
                     [COMMENT comment] [VERBATIM] [APPEND])
   不要同时在多个相互独立的目标中执行上述命令产生相同的文件，主要是为了防止冲突产生。如果有多条命令，它们将会按顺序执行。ARGS是为了向后兼容，
   使用过程中可以忽略。MAIN_DEPENDENCY完全是可选的，它主要是针对Visual Studio给出的一个建议
   
   第二种形式是为某个目标如库或可执行程序添加一个客制命令。这对于要在构建一个目标之前或之后执行一些操作非常有用。该命令本身会成为目标的一部分，
   仅在目标本身被构建时才会执行。如果该目标已经构建，命令将不会执行:
   add_custom_command(TARGET target
                     PRE_BUILD | PRE_LINK| POST_BUILD
                     COMMAND command1[ARGS] [args1...]
                     [COMMAND command2[ARGS] [args2...] ...]
                     [WORKING_DIRECTORYdir]
                     [COMMENT comment][VERBATIM])
   命令执行的时机由如下参数决定： 
   PRE_BUILD - 命令将会在其他依赖项执行前执行
   PRE_LINK - 命令将会在其他依赖项执行完后执行
   POST_BUILD - 命令将会在目标构建完后执行。
   
   add_custom_target: 增加一个没有输出的目标，使得它总是被构建。 
            add_custom_target(Name [ALL] [command1 [args1...]]
                    [COMMAND command2 [args2...] ...]
                    [DEPENDS depend depend depend ... ]
                    [WORKING_DIRECTORY dir]
                    [COMMENT comment] [VERBATIM]
                    [SOURCES src1 [src2...]])
   增加一个指定名字的目标，并执行指定的命令。该目标没有输出文件，总是被认为是过期的，即使是在试图用目标的名字创建一个文件。使用ADD_CUSTOM_COMMAND命令来创建一个具有依赖项的文件。默认情况下，没有任何目标会依赖该客制目标。使用ADD_DEPENDENCIES 来添加依赖项或成为别的目标的依赖项。
   如果指定了ALL选项，那就表明该目标会被添加到默认的构建目标，使得它每次都被运行。                 
